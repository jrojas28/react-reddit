{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"graphql\"","webpack:///external \"winston\"","webpack:///external \"express\"","webpack:///external \"faker\"","webpack:///external \"config\"","webpack:///external \"body-parser\"","webpack:///external \"apollo-server-express\"","webpack:///external \"babel-polyfill\"","webpack:///./src/back/util/log.js","webpack:///./src/back/gql/models/users/types.js","webpack:///./src/back/util/user.js","webpack:///./src/back/util/db.js","webpack:///./src/back/gql/models/users/queries.js","webpack:///./src/back/gql/query.js","webpack:///./src/back/gql/index.js","webpack:///./src/back/routes/front-end.js","webpack:///./src/back/server/server.js","webpack:///./src/back/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","combine","external_winston_","timestamp","label","customFormat","printf","info","level","message","log","format","transports","Console","UserType","external_graphql_","description","fields","id","type","email","user_generateUser","baseData","_extends","external_faker_default","a","random","uuid","findName","internet","Database","users","limit","arguments","length","undefined","userBase","push","generateUserBase","db","SingleUserQuery","args","resolve","src","_ref","find","user","gql_query","schema","query","gql","external_apollo_server_express_","router","external_express_default","Router","req","res","send","front_end","app","server_log","use","external_body_parser_default","json","static","applyMiddleware","healthy","port","external_config_default","listen","graphqlPath","server"],"mappings":"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","file":"server.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = require(\"graphql\");","module.exports = require(\"winston\");","module.exports = require(\"express\");","module.exports = require(\"faker\");","module.exports = require(\"config\");","module.exports = require(\"body-parser\");","module.exports = require(\"apollo-server-express\");","module.exports = require(\"babel-polyfill\");","/**\n * @file Logger creation util.\n */\nimport { createLogger, format, transports } from 'winston';\n\nconst {\n  combine,\n  timestamp,\n  label,\n  printf,\n} = format;\n\nconst customFormat = printf((info) => {\n  return `${info.timestamp} [${info.label}] ${info.level}: ${info.message}`;\n});\n\nconst getLogger = (name) => {\n  const logger = createLogger({\n    format: combine(\n      label({ label: name }),\n      timestamp(),\n      customFormat\n    ),\n    transports: [new transports.Console()],\n  });\n\n  return logger;\n};\n\nexport default getLogger;\n\n","/**\n * @file User model type definition\n */\nimport { GraphQLObjectType, GraphQLString, GraphQLInt } from 'graphql';\n\nexport const UserType = new GraphQLObjectType({\n  name: 'user',\n  description: 'Single user item',\n  fields: {\n    id: {\n      type: GraphQLInt,\n    },\n    name: {\n      type: GraphQLString,\n    },\n    email: {\n      type: GraphQLString,\n    },\n  },\n});\n\nexport default UserType;\n","/**\n * @file User util\n */\nimport faker from 'faker';\n\nexport const generateUser = (baseData) => {\n  return {\n    id: faker.random.uuid(),\n    name: faker.name.findName(),\n    email: faker.internet.email(),\n    ...baseData,\n  };\n};\n\nexport const generateUserBase = (limit = 100) => {\n  const userBase = [];\n\n  for (let i = 1; i <= limit; i += 1) {\n    userBase.push(generateUser({ id: i }));\n  }\n\n  return userBase;\n};\n","/**\n * @file Helper to handle generated data as constants.\n */\nimport { generateUserBase } from './user';\n\nconst Database = {\n  users: generateUserBase(),\n};\n\nexport const addUser = (user) => {\n  Database.users = [\n    ...Database.users,\n    user,\n  ];\n};\n\nexport const removeUser = (userId) => {\n  Database.users = Database.users.filter(user => user.id !== userId);\n};\n\nexport default Database;\n","/**\n * @file Queries regarding user\n */\nimport { GraphQLInt } from 'graphql';\n\nimport { UserType } from './types';\nimport Database from '../../../util/db';\n\nexport const SingleUserQuery = {\n  name: 'Single user query',\n  type: UserType,\n  args: {\n    id: {\n      description: 'ID of the user to look for',\n      type: GraphQLInt,\n    },\n  },\n  resolve: (src, {\n    id,\n  }) => {\n    return Database.users.find(user => user.id === id);\n  },\n};\n","/**\n * @file Query type definitions\n */\nimport { GraphQLObjectType } from 'graphql';\nimport { SingleUserQuery } from './models/users/queries';\n\nconst query = new GraphQLObjectType({\n  name: 'Query',\n  fields: {\n    user: SingleUserQuery,\n  },\n});\n\nexport default query;\n","import { ApolloServer } from 'apollo-server-express';\nimport { GraphQLSchema } from 'graphql';\nimport query from './query';\n\n// The GraphQL schema\nconst schema = new GraphQLSchema({\n  query,\n});\n\nexport default new ApolloServer({ schema });\n","/**\n * @file Front end related routes\n */\nimport express from 'express';\n\nconst router = express.Router();\n\nrouter.get('*', (req, res) => {\n  res.send(`\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <title>My React App</title>\n    </head>\n    <body>\n        <div id=\"app\"></div>\n        <script type=\"text/javascript\" src=\"dist/reddit.bundle.js\"></script>\n    </body>\n    </html>\n  `);\n});\n\nexport default router;\n","/**\n * @file server initialization file.\n */\nimport config from 'config';\nimport express from 'express';\nimport bodyParser from 'body-parser';\n\nimport getLogger from '../util/log';\nimport GqlServer from '../gql/index';\nimport frontEndRouter from '../routes/front-end';\n\nconst app = express();\nconst log = getLogger('server');\n\napp.use(bodyParser.json());\napp.use(express.static('./'));\n\nGqlServer.applyMiddleware({ app });\n\n/**\n * Routers:\n */\napp.use(frontEndRouter);\n\n/**\n * health end-points\n */\napp.get('/health-check', (req, res) => res.json({ healthy: true }));\n\nexport default () => {\n  const port = config.get('server.port');\n\n  app.listen(port, () => {\n    log.info(`Server initialized on port: ${port}`);\n    log.info(`GQL running at: ${GqlServer.graphqlPath}`);\n  });\n};\n","/**\n * @file entry point for the server initialization.\n */\n\nrequire('babel-polyfill');\n// eslint-disable-next-line\nimport server from './server/server';\n\n// Start up server:\nserver();\n"],"sourceRoot":""}