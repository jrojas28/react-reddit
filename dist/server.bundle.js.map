{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./config/webpack/webpack.dev.front.config.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/back/gql/index.js","webpack:///./src/back/gql/models/global/types.js","webpack:///./src/back/gql/models/users/mutations.js","webpack:///./src/back/gql/models/users/queries.js","webpack:///./src/back/gql/models/users/types.js","webpack:///./src/back/gql/mutation.js","webpack:///./src/back/gql/query.js","webpack:///./src/back/index.js","webpack:///./src/back/routes/front-end.js","webpack:///./src/back/server/server.js","webpack:///./src/back/util/boot.js","webpack:///./src/back/util/config.js","webpack:///./src/back/util/db.js","webpack:///./src/back/util/gql.js","webpack:///./src/back/util/hotModuleReloading.js","webpack:///./src/back/util/log.js","webpack:///./src/back/util/user.js","webpack:///external \"apollo-server-express\"","webpack:///external \"babel-polyfill\"","webpack:///external \"body-parser\"","webpack:///external \"config\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"faker\"","webpack:///external \"graphql\"","webpack:///external \"path\"","webpack:///external \"react-hot-loader\"","webpack:///external \"webpack\"","webpack:///external \"webpack-dev-middleware\"","webpack:///external \"webpack-hot-middleware\"","webpack:///external \"winston\""],"names":["path","require","webpack","module","exports","mode","entry","app","output","join","__dirname","publicPath","filename","rules","test","exclude","use","loader","devtool","plugins","HotModuleReplacementPlugin","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","schema","GraphQLSchema","query","mutation","ApolloServer","playground","settings","SliceArgsType","GraphQLInputObjectType","name","description","fields","limit","type","GraphQLInt","defaultValue","offset","UInt","GraphQLScalarType","serialize","value","parseValue","parseLiteral","ast","kind","Kind","INT","parseInt","RecordID","GraphQLNonNull","CreateUserMutation","UserType","args","input","CreateUserInputType","resolve","src","Database","users","some","user","username","Error","email","password","passwordConfirm","SingleUserQuery","id","find","ListUserQuery","GraphQLList","slice","GraphQLObjectType","GraphQLString","createUser","dotenv","config","router","express","Router","req","res","send","JSON","stringify","log","bodyParser","json","static","GqlServer","applyMiddleware","frontEndRouter","healthy","port","listen","info","graphqlPath","bootDB","frontEndConfig","baseUrl","graphqlEndpoint","isDev","IDRecords","clear","keys","forEach","key","add","table","elem","removeById","filter","getIdForTable","getSliceArgs","getSlicedList","list","resolvedList","clientCompiler","clientWebpackConfig","noInfo","combine","format","timestamp","label","printf","customFormat","level","message","getLogger","logger","transports","Console","generateUser","baseData","faker","findName","internet","userName","generateUserBase","userBase","push"],"mappings":"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","file":"server.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/back/index.js\");\n","/**\n * @file Webpack dev config\n */\nconst path = require('path');\nconst webpack = require('webpack');\n\nmodule.exports = {\n  mode: 'development',\n  entry: {\n    app: [\n      'webpack-hot-middleware/client',\n      './src/front/index.js',\n    ],\n  },\n  output: {\n    path: path.join(__dirname, '../../dist'),\n    publicPath: path.join(__dirname, '../../dist'),\n    filename: 'reddit.bundle.js',\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.(js|jsx)$/,\n        exclude: /node_modules/,\n        use: [\n          { loader: 'babel-loader' },\n          { loader: 'eslint-loader' },\n        ],\n      },\n      {\n        test: /\\.(s*)css$/,\n        exclude: /node_modules/,\n        use: [\n          { loader: 'style-loader' },\n          { loader: 'css-loader' },\n          { loader: 'sass-loader' },\n        ],\n      },\n    ],\n  },\n  devtool: 'inline-source-map',\n  plugins: [\n    new webpack.HotModuleReplacementPlugin(),\n  ],\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { ApolloServer } from 'apollo-server-express';\nimport { GraphQLSchema } from 'graphql';\nimport query from './query';\nimport mutation from './mutation';\n\n// The GraphQL schema\nconst schema = new GraphQLSchema({\n  query,\n  mutation,\n});\n\nexport default new ApolloServer({\n  schema,\n  playground: {\n    settings: {\n      'editor.cursorShape': 'line',\n    },\n  },\n});\n","/**\n * @file Global types.\n */\nimport {\n  GraphQLInputObjectType,\n  GraphQLInt,\n  GraphQLScalarType,\n  Kind,\n  GraphQLNonNull,\n} from 'graphql';\n\n/**\n * Slice arguments type. Serves the purpose of pagination\n * across any array/collection type.\n */\nexport const SliceArgsType = new GraphQLInputObjectType({\n  name: 'SliceArgs',\n  description: 'Slice arguments',\n  fields: {\n    limit: {\n      type: GraphQLInt,\n      defaultValue: 25,\n    },\n    offset: {\n      type: GraphQLInt,\n      defaultValue: 0,\n    },\n  },\n});\n\n/**\n * Unsigned int GQL type.\n */\nexport const UInt = new GraphQLScalarType({\n  name: 'UInt',\n  serialize: value => value && value >= 0 ? value : null,\n  parseValue: value => value && value >= 0 ? value : null,\n  parseLiteral: (ast) => {\n    if (ast.kind === Kind.INT) {\n      return parseInt(ast.value, 10) >= 0 || null;\n    }\n    return null;\n  },\n});\n\n/**\n * Record ID items.\n */\nexport const RecordID = new GraphQLNonNull(UInt);\n\n","\n/**\n * @file Mutations related to the User model.\n */\nimport { UserType, CreateUserInputType } from './types';\nimport Database, { add } from '../../../util/db';\nimport { generateUser } from '../../../util/user';\n\n/**\n * Mutation that enables to create a new user\n */\nexport const CreateUserMutation = {\n  name: 'CreateUser',\n  type: UserType,\n  args: {\n    input: {\n      type: CreateUserInputType,\n    },\n  },\n  resolve: (src, {\n    input,\n  }) => {\n    if (Database.users.some(user => user.username === input.username)) {\n      throw new Error('username is already taken');\n    }\n\n    if (Database.users.some(user => user.email === input.email)) {\n      throw new Error('email is already taken');\n    }\n\n    if (input.password !== input.passwordConfirm) {\n      throw new Error('passwords do not match');\n    }\n\n    const user = generateUser(input);\n    add('users', user);\n\n    return user;\n  },\n};\n\n","/**\n * @file Queries regarding user\n */\nimport { GraphQLNonNull, GraphQLInt, GraphQLList } from 'graphql';\n\nimport { UserType } from './types';\nimport Database from '../../../util/db';\nimport { getSliceArgs, getSlicedList } from '../../../util/gql';\n\n/**\n * Query to get a single user.\n */\nexport const SingleUserQuery = {\n  name: 'User',\n  type: UserType,\n  args: {\n    id: {\n      description: 'ID of the user to look for',\n      type: new GraphQLNonNull(GraphQLInt),\n    },\n  },\n  resolve: (src, {\n    id,\n  }) => {\n    return Database.users.find(user => user.id === id);\n  },\n};\n\n/**\n * Query to get the list of users out of the database.\n */\nexport const ListUserQuery = {\n  name: 'Users',\n  type: new GraphQLList(UserType),\n  args: {\n    ...getSliceArgs(),\n  },\n  resolve: (src, {\n    slice = {},\n  }) => {\n    return getSlicedList(Database.users, slice);\n  },\n};\n","/**\n * @file User model type definition\n */\nimport {\n  GraphQLObjectType,\n  GraphQLString,\n  GraphQLNonNull,\n  GraphQLInputObjectType,\n} from 'graphql';\nimport { RecordID } from '../global/types';\n\nexport const UserType = new GraphQLObjectType({\n  name: 'User',\n  description: 'Single user item',\n  fields: {\n    id: {\n      type: RecordID,\n    },\n    name: {\n      type: GraphQLString,\n    },\n    email: {\n      type: GraphQLString,\n    },\n    username: {\n      type: new GraphQLNonNull(GraphQLString),\n    },\n  },\n});\n\nexport const CreateUserInputType = new GraphQLInputObjectType({\n  name: 'CreateUserInputType',\n  description: 'Input needed to create an User record',\n  fields: {\n    username: {\n      type: new GraphQLNonNull(GraphQLString),\n    },\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n    },\n    email: {\n      type: new GraphQLNonNull(GraphQLString),\n    },\n    password: {\n      type: new GraphQLNonNull(GraphQLString),\n    },\n    passwordConfirm: {\n      type: new GraphQLNonNull(GraphQLString),\n    },\n  },\n});\n\nexport default UserType;\n","/**\n * @file Mutation type definitions\n */\nimport { GraphQLObjectType } from 'graphql';\nimport { CreateUserMutation } from './models/users/mutations';\n\nconst mutation = new GraphQLObjectType({\n  name: 'Mutation',\n  fields: {\n    createUser: CreateUserMutation,\n  },\n});\n\nexport default mutation;\n","/**\n * @file Query type definitions\n */\nimport { GraphQLObjectType } from 'graphql';\nimport { SingleUserQuery, ListUserQuery } from './models/users/queries';\n\nconst query = new GraphQLObjectType({\n  name: 'Query',\n  fields: {\n    user: SingleUserQuery,\n    users: ListUserQuery,\n  },\n});\n\nexport default query;\n","/**\n * @file entry point for the server initialization.\n */\n\nimport 'babel-polyfill';\nimport dotenv from 'dotenv';\nimport server from './server/server';\n\n// Add .env config\ndotenv.config();\n// Start up server:\nserver();\n","/**\n * @file Front end related routes\n */\nimport express from 'express';\nimport { frontEndConfig } from '../util/config';\n\nconst router = express.Router();\n\nrouter.get('*', (req, res) => {\n  res.send(`\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <title>React Reddit</title>\n        <script type=\"text/javascript\">\n          window.__CONFIG__ = ${JSON.stringify(frontEndConfig())}\n        </script>\n    </head>\n    <body>\n        <div id=\"app\"></div>\n        <script type=\"text/javascript\" src=\"dist/reddit.bundle.js\"></script>\n    </body>\n    </html>\n  `);\n});\n\nexport default router;\n","/**\n * @file server initialization file.\n */\nimport config from 'config';\nimport express from 'express';\nimport bodyParser from 'body-parser';\n\nimport getLogger from '../util/log';\nimport GqlServer from '../gql/index';\nimport frontEndRouter from '../routes/front-end';\nimport boot from '../util/boot';\nimport hotModuleReloading from '../util/hotModuleReloading';\n\nconst app = express();\nconst log = getLogger('server');\n\n// Hot reloading:\nhotModuleReloading(app);\n\napp.use(bodyParser.json());\napp.use(express.static('./'));\n\nGqlServer.applyMiddleware({ app });\n\n/**\n * Routers:\n */\napp.use(frontEndRouter);\n\n/**\n * health end-points\n */\napp.get('/health-check', (req, res) => res.json({ healthy: true }));\n\nexport default async () => {\n  boot();\n  const port = config.get('server.port');\n\n  app.listen(port, () => {\n    log.info(`Server initialized on port: ${port}`);\n    log.info(`GQL running at: ${GqlServer.graphqlPath}`);\n  });\n};\n","/**\n * @file Boot file for the DB.\n */\nimport { generateUserBase } from './user';\nimport Database from './db';\n\n/**\n * Initializes some data in the Database\n */\nconst bootDB = () => {\n  Database.users = generateUserBase();\n};\n\nexport default () => {\n  bootDB();\n};\n","/**\n * @file Configuration helper related methods.\n */\nimport config from 'config';\n\n/**\n * Returns config to be used in the front-end\n */\nexport const frontEndConfig = () => {\n  const baseUrl = config.get('baseUrl');\n\n  return {\n    baseUrl,\n    graphqlEndpoint: `${baseUrl}graphql`,\n  };\n};\n\n/**\n * Checks if current environment is dev.\n */\nexport const isDev = () => {\n  return process.env.NODE_ENV === 'dev';\n};\n","/**\n * @file Helper to handle generated in-memory database.\n */\n/**\n * The database object. Each key here represents\n * a table\n */\nconst Database = {\n  users: [],\n};\n\n/**\n * Stores the last given ID to the user\n */\nconst IDRecords = {\n  users: 0,\n};\n\n/**\n * Clears all of the database 'tables'.\n */\nexport const clear = () => {\n  const keys = Object.keys(Database);\n  keys.forEach((key) => {\n    Database[key] = [];\n    IDRecords[key] = 0;\n  });\n};\n\n/**\n * Adds an element to the Database object.\n * @param {String} table The database table name in which the element will be added\n * @param {*} elem Element to be added.\n */\nexport const add = (table, elem) => {\n  if (!table || !elem || !Database[table]) {\n    return; // nothing to do. Won't add anything.\n  }\n\n  Database[table] = [\n    ...Database[table],\n    elem,\n  ];\n};\n\n/**\n * Removes an element by ID\n * @param {string} table The database name in which the element will be removed.\n * @param {number} id ID of the element to be removed\n */\nexport const removeById = (table, id) => {\n  if (!table || typeof id === 'undefined' || !Database[table]) {\n    return;\n  }\n\n  Database[table] = Database[table].filter(elem => elem.id !== id);\n};\n\n/**\n * Gets a new, unique, ID for a given table.\n * @param {String} table The database name to which the ID is looked for.\n */\nexport const getIdForTable = (table) => {\n  IDRecords[table] += 1;\n  return IDRecords[table];\n};\n\nexport default Database;\n","/**\n * @file GQL helper methods\n */\nimport { SliceArgsType } from '../gql/models/global/types';\n\n/**\n * Returns the sliced arguments to be used\n * on GQL type definitions.\n */\nexport const getSliceArgs = () => {\n  return {\n    slice: {\n      description: 'Slice arguments for lists',\n      type: SliceArgsType,\n    },\n  };\n};\n\n/**\n * Given a list, slices it and returns it based on\n * sliceArgs.\n * @param {Array} list List to be sliced\n * @param {Object} slice Parameters for slicing, expecting limit & offset.\n */\nexport const getSlicedList = (list, slice) => {\n  if (!slice) {\n    return [...list];\n  }\n\n  const {\n    offset = 0,\n    limit = 25,\n  } = slice;\n\n  let resolvedList = [...list];\n\n  if (offset) {\n    resolvedList = resolvedList.slice(offset);\n  }\n\n  if (limit) {\n    resolvedList = resolvedList.slice(0, limit);\n  }\n\n  return resolvedList;\n};\n","/**\n * @file setup Hot module reloading.\n */\nimport webpack from 'webpack';\nimport webpackDevMiddleware from 'webpack-dev-middleware';\nimport webpackHotMiddleware from 'webpack-hot-middleware';\n\nimport clientWebpackConfig from '../../../config/webpack/webpack.dev.front.config';\nimport { isDev } from './config';\n\nconst clientCompiler = webpack(clientWebpackConfig);\n\nexport default (app) => {\n  // Only do thi on dev\n  if (isDev()) {\n    return;\n  }\n\n  app.use(webpackDevMiddleware(clientCompiler, {\n    noInfo: true, publicPath: clientWebpackConfig.output.publicPath,\n  }));\n\n  app.use(webpackHotMiddleware(clientCompiler));\n};\n","/**\n * @file Logger creation util.\n */\nimport { createLogger, format, transports } from 'winston';\n\nconst {\n  combine,\n  timestamp,\n  label,\n  printf,\n} = format;\n\nconst customFormat = printf((info) => {\n  return `${info.timestamp} [${info.label}] ${info.level}: ${info.message}`;\n});\n\n/**\n * Returns a logger to be used on the back-end.\n * @param {String} name Name of the logger\n */\nconst getLogger = (name) => {\n  const logger = createLogger({\n    format: combine(\n      label({ label: name }),\n      timestamp(),\n      customFormat\n    ),\n    transports: [new transports.Console()],\n  });\n\n  return logger;\n};\n\nexport default getLogger;\n\n","/**\n * @file User util\n */\nimport faker from 'faker';\nimport { getIdForTable } from './db';\n\n/**\n * Generates a user with its attributes using faker.\n * BaseData can be provided for custom functionality.\n * @param {Object} baseData information to replace the generated one\n */\nexport const generateUser = (baseData) => {\n  return {\n    name: faker.name.findName(),\n    email: faker.internet.email(),\n    username: faker.internet.userName(),\n    ...baseData,\n    // Make sure ID is not overwritten\n    id: getIdForTable('users'),\n  };\n};\n\n/**\n * Returns a list of users with IDs from 1 to limit\n * @param {int} limit Number of users to generate (defaults to 100)\n */\nexport const generateUserBase = (limit = 100) => {\n  const userBase = [];\n\n  for (let i = 1; i <= limit; i += 1) {\n    userBase.push(generateUser());\n  }\n\n  return userBase;\n};\n","module.exports = require(\"apollo-server-express\");","module.exports = require(\"babel-polyfill\");","module.exports = require(\"body-parser\");","module.exports = require(\"config\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"faker\");","module.exports = require(\"graphql\");","module.exports = require(\"path\");","module.exports = require(\"react-hot-loader\");","module.exports = require(\"webpack\");","module.exports = require(\"webpack-dev-middleware\");","module.exports = require(\"webpack-hot-middleware\");","module.exports = require(\"winston\");"],"sourceRoot":""}