!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="dist",r(r.s=0)}([function(e,t,r){"use strict";var n=function(e){return e&&e.__esModule?e:{default:e}}(r(1));r(7),(0,n.default)()},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=f(r(2)),o=f(r(3)),u=f(r(4)),i=f(r(5)),a=f(r(10)),l=f(r(8));function f(e){return e&&e.__esModule?e:{default:e}}var s=(0,o.default)(),c=(0,i.default)("server");s.use(u.default.json()),s.use(o.default.static("./")),a.default.applyMiddleware({app:s}),s.use(l.default),s.get("/health-check",function(e,t){return t.json({healthy:!0})}),t.default=function(){var e=n.default.get("server.port");s.listen(e,function(){c.info("Server initialized on port: "+e),c.info("GQL running at: "+a.default.graphqlPath)})}},function(e,t){e.exports=require("config")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("body-parser")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(6),o=n.format.combine,u=n.format.timestamp,i=n.format.label,a=(0,n.format.printf)(function(e){return e.timestamp+" ["+e.label+"] "+e.level+": "+e.message});t.default=function(e){return(0,n.createLogger)({format:o(i({label:e}),u(),a),transports:[new n.transports.Console]})}},function(e,t){e.exports=require("winston")},function(e,t){e.exports=require("babel-polyfill")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e){return e&&e.__esModule?e:{default:e}}(r(3)).default.Router();n.get("*",function(e,t){t.send('\n    <!DOCTYPE html>\n    <html lang="en">\n    <head>\n        <meta charset="UTF-8">\n        <meta name="viewport" content="width=device-width, initial-scale=1.0">\n        <meta http-equiv="X-UA-Compatible" content="ie=edge">\n        <title>My React App</title>\n    </head>\n    <body>\n        <div id="app"></div>\n        <script type="text/javascript" src="dist/reddit.bundle.js"><\/script>\n    </body>\n    </html>\n  ')}),t.default=n},function(e,t){e.exports=require("apollo-server-express")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(9),o=r(11),u=new o.GraphQLSchema({query:new o.GraphQLObjectType({name:"Query",fields:{hello:{type:o.GraphQLString,description:"A simple type for getting started!",resolve:function(){return"world"}}}})});t.default=new n.ApolloServer({schema:u})},function(e,t){e.exports=require("graphql")}]);
//# sourceMappingURL=server.bundle.js.map