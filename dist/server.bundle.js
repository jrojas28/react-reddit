!function(e){var r={};function t(n){if(r[n])return r[n].exports;var i=r[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var i in e)t.d(n,i,function(r){return e[r]}.bind(null,i));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="dist",t(t.s=8)}([function(e,r){e.exports=require("graphql")},function(e,r){e.exports=require("winston")},function(e,r){e.exports=require("express")},function(e,r){e.exports=require("faker")},function(e,r){e.exports=require("config")},function(e,r){e.exports=require("body-parser")},function(e,r){e.exports=require("apollo-server-express")},function(e,r){e.exports=require("babel-polyfill")},function(e,r,t){"use strict";t.r(r);var n=t(4),i=t.n(n),o=t(2),a=t.n(o),u=t(5),s=t.n(u),l=t(1),p=l.format.combine,c=l.format.timestamp,f=l.format.label,d=(0,l.format.printf)(function(e){return e.timestamp+" ["+e.label+"] "+e.level+": "+e.message}),m=function(e){return Object(l.createLogger)({format:p(f({label:e}),c(),d),transports:[new l.transports.Console]})},h=t(6),v=t(0),y=new v.GraphQLObjectType({name:"user",description:"Single user item",fields:{id:{type:v.GraphQLInt},name:{type:v.GraphQLString},email:{type:v.GraphQLString}}}),g=t(3),b=t.n(g),j=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},O=function(e){return j({id:b.a.random.uuid(),name:b.a.name.findName(),email:b.a.internet.email()},e)};var w={users:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:100,r=[],t=1;t<=e;t+=1)r.push(O({id:t}));return r}()},x=w,L=new v.GraphQLInputObjectType({name:"SliceArgs",description:"Slice arguments",fields:{limit:{type:v.GraphQLInt,defaultValue:25},offset:{type:v.GraphQLInt,defaultValue:0}}});var Q=function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=r.offset,n=r.limit,i=void 0===n?25:n,o=[].concat(function(e){if(Array.isArray(e)){for(var r=0,t=Array(e.length);r<e.length;r++)t[r]=e[r];return t}return Array.from(e)}(e));return t&&(o=o.slice(t)),i&&(o=o.slice(0,i)),o},S=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},G={name:"User",type:y,args:{id:{description:"ID of the user to look for",type:new v.GraphQLNonNull(v.GraphQLInt)}},resolve:function(e,r){var t=r.id;return x.users.find(function(e){return e.id===t})}},q={name:"Users",type:new v.GraphQLList(y),args:S({},{slice:{description:"Slice arguments for lists",type:L}}),resolve:function(e,r){var t=r.slice,n=void 0===t?{}:t;return Q(x.users,n)}},P=new v.GraphQLObjectType({name:"Query",fields:{user:G,users:q}}),A=new v.GraphQLSchema({query:P}),T=new h.ApolloServer({schema:A}),I=a.a.Router();I.get("*",function(e,r){r.send('\n    <!DOCTYPE html>\n    <html lang="en">\n    <head>\n        <meta charset="UTF-8">\n        <meta name="viewport" content="width=device-width, initial-scale=1.0">\n        <meta http-equiv="X-UA-Compatible" content="ie=edge">\n        <title>My React App</title>\n    </head>\n    <body>\n        <div id="app"></div>\n        <script type="text/javascript" src="dist/reddit.bundle.js"><\/script>\n    </body>\n    </html>\n  ')});var M=I,_=a()(),U=m("server");_.use(s.a.json()),_.use(a.a.static("./")),T.applyMiddleware({app:_}),_.use(M),_.get("/health-check",function(e,r){return r.json({healthy:!0})});t(7),function(){var e=i.a.get("server.port");_.listen(e,function(){U.info("Server initialized on port: "+e),U.info("GQL running at: "+T.graphqlPath)})}()}]);
//# sourceMappingURL=server.bundle.js.map